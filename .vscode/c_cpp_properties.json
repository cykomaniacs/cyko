{
  "version": 4,
  "enableConfigurationSquiggles": true,

  "env": {
    "compilerWinMSVCx64":     "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.33.31424/bin/Hostx64/x64/cl.exe",
    "compilerWinMSVClangx64": "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/Llvm/x64/bin/clang-cl.exe",
    "compilerWinClangx64":    "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/Llvm/x64/bin/clang++.exe",
    "compilerWinLLVMx64":     "",
    "compilerWinGCCx64":      "",
    "compilerNixLLVMx64":     "",
    "compilerNixGCCx64":      "",

    // project...
    "cykoInc": "${workspaceFolder}/include",
    "cykoSrc": "${workspaceFolder}/src",
    "cykoBin": "${workspaceFolder}/bin"
  },

  "configurations": [
    //+-----+----------------------------------------------------------------
    //| WIN | WINDOWS/MINGW/MSYS/...
    //+-----+----------------------------------------------------------------

    { "name": "win-debug-x64(msvc)",

      "includePath": [ "${cykoInc}" ], "forcedInclude": [
        "${cykoInc}/cyko/common/common.h"
      ],

      "defines": [
        "CYKO_DEBUG",             // TARGET > Configuration
        "CYKO_BUILD_TOOLKIT_MSVC",//   HOST > Microsoft VC (cl.exe)
        "CYKO_BUILD_CRT_MSVC",    // LIBC   > "CRT" MSVC C RUNTIME LIB
        "CYKO_BUILD_CXX_MSVC",    // LIBCXX > "STL" MSVC STANDARD CXX LIB
        "CYKO_BUILD_X64",         //   HOST > Architecture
        "CYKO_BUILD_WINDOWS",     // TARGET > OS
        "CYKO_BUILD_USE_STDINT",  // CONFIG > Use <cstdint> for size types

        "_CONSOLE",
        "_UNICODE"
      ],

      "compilerArgs": [
        "/experimental:module"
        /*
        "/stdIfcDir", "C:/PROGRAM FILES/MICROSOFT VISUAL STUDIO/2022/COMMUNITY/VC/TOOLS/MSVC/14.33.31424/IFC/X64",
        "/ifcOutput", "D:/O.WORKSHOP/SRC/CPP/CYKO/BIN/DEBUG/X64/NETA.IXX.IFC",
        "/sourceDependencies:directives", "BIN/DEBUG/X64/",
        "/FoBIN/DEBUG/X64/NETA.IXX.OBJ",
        "/FdBIN/DEBUG/X64/VC143.PDB",
        "/external:W3",
        "/Gd",
        "/interface", "/FID:/O.WORKSHOP/SRC/CPP/CYKO/INCLUDE/CYKO/COMMON/COMMON.H",
        "/FC",
        "/TP", "D:/O.WORKSHOP/SRC/CPP/CYKO/SRC/NETA.IXX"
        */
      ],

      "windowsSdkVersion": "10.0.22000.0",
      "compilerPath": "${compilerWinMSVCx64}",
      "cStandard": "c17",
      "cppStandard": "c++23",
      "intelliSenseMode": "msvc-x64"
    },
    { "name": "win-debug-x64(msvclang)",

      "includePath": [ "${cykoInc}" ], "forcedInclude": [
        "${cykoInc}/cyko/common/common.h"
      ],

      "defines": [
        "CYKO_DEBUG",
        "CYKO_BUILD_TOOLKIT_MSVCLANG",
        "CYKO_BUILD_CRT_LLVM", // LIBC
        "CYKO_BUILD_CXX_MSVC", // LIBCPP
        "CYKO_BUILD_X64",
        "CYKO_BUILD_WINDOWS",
        "CYKO_BUILD_USE_STDINT",

        "_CONSOLE",
        "_UNICODE"
      ],

      "windowsSdkVersion": "10.0.22000.0",
      "compilerPath": "${compilerWinMSVClangx64}",
      "cStandard": "c17",
      "cppStandard": "c++20",
      "intelliSenseMode": "clang-x64"
    },
    { "name": "win-debug-x64(llvm)",

      "includePath": [ "${cykoInc}" ], "forcedInclude": [
        "${cykoInc}/cyko/common/common.h"
      ],

      "defines": [
        "CYKO_DEBUG",
        "CYKO_BUILD_TOOLKIT_LLVM",
        "CYKO_BUILD_CRT_LLVM", // LIBC
        "CYKO_BUILD_CXX_MSVC", // LIBCXX
        "CYKO_BUILD_X64",
        "CYKO_BUILD_WINDOWS",
        "CYKO_BUILD_USE_STDINT",

        "_CONSOLE",
        "_UNICODE"
      ],

      "windowsSdkVersion": "10.0.22000.0",
      "compilerPath": "${compilerWinClangx64}",
      "cStandard": "c17",
      "cppStandard": "c++23",
      "intelliSenseMode": "clang-x64", "compilerArgs": [
        "-std=c++2b",
        //"-stdlib=libc++", // C++ standard library to use. <arg> must be ‘libc++ (GCC)’, ‘libstdc++ (LLVM)’ or ‘platform’."
        "-fcxx-modules",
        "-fmodules",
        "-fmodules-ts",

        "-fimplicit-modules",     // automatically translates #include directives into import statements (i.e. headers into modules).
        "-fimplicit-module-maps", // tells the compiler to implicitly search the file system for module map files.
                                  // A module map file is a file containing the mapping between existing headers and the logical structure of a module.
        "-m64"
      ]
    }

    //+-----+----------------------------------------------------------------
    //| NIX | LINUX/BSD/...
    //+-----+----------------------------------------------------------------
  ]
}
